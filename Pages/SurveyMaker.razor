
ï»¿@page "/SurveyMaker"
@attribute [Authorize(Policy = "RequireCreation")]
@using DataAccessLibrary.Models
@using System.Collections.Generic
@inject Testingstuff qs
@inherits OwningComponentBase<Testingstuff>

<div>
    <h3>SurveyMaker</h3>
    <br />
    <h3>CreateSurvey</h3>
    <label>
        <label for="sname">Survey name:</label>
        <input type="text" @bind="qName"><br>

        <label for="start">Start date:</label>
        <input type="date" id="start" name="Survey-start"
               @bind="startTime"
               min="2021-01-01" max="2500-12-31">
        <br>
        <label for="end">End date:</label>
        <input type="date" id="end" name="Survey-End"
               @bind="endTime"
               min="2021-01-01" max="2500-12-31">
        <br>

        Question Type:
        <label for="question">Choose the type of Question you want:</label>
        <select @bind="selectedValue" name="Type" id="Type">
            <option value=1>Open</option>
            <option value=2>True False</option>
            <option value=3>Mutiple Choice</option>
        </select>
        <br>
        <button @onclick="AddValue" class=" btn btn-primary">AddQuestion</button>
    </label>
    @for (int i = 0; i<values.Count;i++)
    {
        int index = i;
        
        <div>
            @if(types[index] == 1)
            {
               <p>open eneded Question</p>
            }
            @if(types[index] == 2)
            {
               <p>True False</p>
            }
            @if(types[index] == 3)
            {
               <p>Mutiple Choice</p>     
            }
            <label for="qtext3">Question Text:</label>
            <input type="text" @onchange="(e)=>UpdateValue(index, e.Value.ToString())"value="@values[i]" />
            <button @onclick="()=>RemoveValue(index)" class="=btn btn-outline-danger">Remove</button><br />
            @if (types[index] == 3)
            {    


                @for (int k = 0; k< mutipleChoices[counter].Count;k++)
               {
                   int index2 = k;

                <div>
                     <label for="qtext3">MutipleChoice:</label>
                     <input type="text" @onchange="(e)=>UpdateChoice(index2, e.Value.ToString())"value="@choices[k]" />
                     <button @onclick="()=>RemoveChoice(index2)" class="=btn btn-outline-danger">Remove</button><br />
                </div>   
                } 
                                <button @onclick="AddChoice" class=" btn btn-primary">AddChoice</button>
            }

        </div>   
    }
    <hr />
    <div>
        <button @onclick="HandleSubmit" class="btn btn-success">Submit</button>
    </div>
    <hr/>
    @for (int j = 0; j < values.Count; j++)
    { 
        <p>@values[j]</p>
    }
   

</div>
<br />
<br />
@code
{

    private List<string> values = new List<string>();
    private List<int> types = new List<int>();
    private List<string> choices = new List<string>();
    private List<List<string>> mutipleChoices = new List<List<string>>();
    private int selectedValue = 1;
    private DateTime startTime =DateTime.Now;
    private DateTime endTime= DateTime.Now;
    private string qName;
    int counter = -1;
    private void AddValue()
    {
        values.Add("");
        types.Add(selectedValue);
        if (selectedValue == 3&&counter ==-1)
        {
            mutipleChoices.Add(choices); counter++;
        }
    }
    private void AddChoice() { mutipleChoices[counter].Add("");  }

    private void UpdateValue(int i, string value) => values[i] = value;
    private void RemoveValue(int i) => values.RemoveAt(i);
    private void UpdateChoice(int k, string choice) => choices[k] = choice;
    private void RemoveChoice(int i) => choices.RemoveAt(i);

    private void HandleSubmit()
    {
        //Access and validate the values list here
    }


    private void SubmitSurvey()
    {

    }


}

