@page "/Testing"
@using SurveyWebsite.Data
@using SurveyWebsite.Pages
@using System.Security.Claims
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _httpContextAccessor
@inject Testingstuff ts
@inherits OwningComponentBase<Testingstuff>


<h3>Testing</h3>
<button class="btn btn-primary" @onclick="questionAdd"> addQuestion </button>

@code {


    private string user = "";

    protected override void OnInitialized()
    {
        if (_httpContextAccessor.HttpContext.User.Identity.IsAuthenticated )
        {

            user = _httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier).Value;
        }


        base.OnInitialized();
    }
    public void questionAdd()
    {
        //var s = ts.AddSurvey(user);
        //not working yet
        //ts.DeleteMutipleChoiceText(4);
        //ts.DeleteQuestion(4);
        //ts.DeleteSurvey(2);
        //ts.DeleteMutipleChoiceTextQotD(4);
        //ts.DeleteQuestionQotD(2);

        //works
        //var b = ts.GetAnswerText(4);
        //var c = ts.GetAnswerTextQotD(1);
        //var d = ts.GetQuestionText(4);
        //var e = ts.GetQuestionTextQotD(1);
        //var f = ts.GetUserOpenResponseQotD(1);
        //var g = ts.GetUserResponseMutipleAnswers(4,1);
        //var h = ts.GetUserResponseMutipleAnswersQotD(1,1);
        //var i = ts.GetUserResponseOpen(4);
        //var j = ts.GetUserTrueFalseResponses(4);
        //var k = ts.IsRequredAnswer(6);
        //ts.SendMutipleResponse(4,1);
        //ts.SendMutipleResponseQotD(1,1);
        //ts.SendOpenededResponse(4,"hello");
        //ts.SendOpenededResponseQotD(1,"hello");
        //ts.SendQuestion(1,"words",1);
        //ts.SendQuestion(1,"not reqired",1,false);
        //ts.SendTrueFalseResponse(4,1);
        //ts.UpdateQuestionTextQotD(1,"words for the words master");
        //ts.UpdateMutipleChoiceTextQotD(3, "text for the text master");
        //ts.UpdateMutipleChoiceText(4,"here is new text");
        //ts.UpdateQuestionText(4,"this Is more text");

        var te = 3;

    }

}